import { MutationTree } from 'vuex'
import User from '@/models/User'
import UserPayload, { UserKey, UserValue } from '@/models/UserPayload'

export interface UserState {
  user: User
}

enum MutationTypes {
  CHANGE_USER_FIELD = 'CHANGE_USER_FIELD',
  UPDATE_USER = 'UPDATE_USER'
}

const state = (): UserState => ({
  user: {
    city: '–ú–æ—Å–∫–≤–∞',
    dateOfBirth: '1996-12-13',
    description: `–Ø Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —Å—Ç—É–¥–µ–Ω—Ç –Ø–Ω–¥–µ–∫—Å –ü—Ä–∞–∫—Ç–∏–∫—É–º–∞ –∏ –ê–∑–æ–≤—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. üë®‚Äçüéì \n –ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø–æ–ª—å–∑—É –∫–æ–º–∞–Ω–¥–µ –∏ –º–∏—Ä—É. üåç`,
    //
    //  –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ä–∞–∑–≤–∏—Ç–æ–µ –∑–∞ –≤—Ä–µ–º—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —à–∞—Ö–º–∞—Ç–∞–º–∏, –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–Ω–µ —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫–∏ —Ä–∞–±–æ—Ç—ã, —Å–æ–±–ª—é–¥–∞—è –ø—Ä–∏ —ç—Ç–æ–º –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏.
    //  –õ–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–µ—Ç –º–Ω–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ—Å—Ç–∏ –∏ –ª–æ–≥–∏–∫–∏ —è–∑—ã–∫–æ–≤, —á—Ç–æ —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Ä–æ–∫–∏ –æ—Å–≤–æ–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
    //  –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –¥–ª—è –º–µ–Ω—è ‚Äì –≤–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–¥ –∫–æ–º–∞–Ω–¥–æ–π —Ü–µ–ª–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å—Ü–µ–Ω–Ω—ã–π –æ–ø—ã—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º –≤–æ frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.
    email: 'sutuzhko.bogdan@ya.ru',
    name: '–ë–æ–≥–¥–∞–Ω',
    photo: 'https://avatars.githubusercontent.com/u/61148628?v=4',
    // resume: 'https://julfy.notion.site/Resume-565f39bdd17d404e9f1394f48fb01f66',
    resume: 'https://disk.yandex.ru/i/MZwPtgnPq6uqAQ',
    surname: '–°—É—Ç—É–∂–∫–æ',
    telegram: 'https://t.me/julfy_bs',
    github: 'https://github.com/julfy-bs',
    codewars: 'https://www.codewars.com/users/julfy-bs',
    linkedIn: 'https://www.linkedin.com/in/sutuzhko-bogdan/',
    discord: 'https://discordapp.com/users/236551328313114635/'
  }
})

type Mutations<S = UserState> = {
  [MutationTypes.CHANGE_USER_FIELD](state: S, payload: UserPayload<UserKey, UserValue>): void
  // todo: –Ω—É–∂–Ω–∞ –ª–∏ —ç—Ç–∞ –º—É—Ç–∞—Ü–∏—è?
  [MutationTypes.UPDATE_USER](state: S, payload: User): void
}

const mutations: MutationTree<UserState> & Mutations = {
  [MutationTypes.CHANGE_USER_FIELD](state, payload) {
    state.user[payload.key] = payload.value
  },
  [MutationTypes.UPDATE_USER](state, payload) {
    state.user = payload
  }
}

const actions = {}

const getters = {}

export default {
  namespaced: true,
  state,
  getters,
  mutations,
  actions
}
